version: "3"
services:
  server:
    build:
      context: .
      args:
        NPM_LOG_LEVEL: notice
    ports:
      - ${PORT}:3000
    environment:
      BCRYPT_SALT: ${BCRYPT_SALT}
      DB_URL: "`sqlserver://db:1433;database=${DB_NAME};user=${DB_USER};password=${DB\
        _PASSWORD};TrustServerCertificate=true`"
      LOG_LEVEL: ${LOG_LEVEL}
      SERVICE_NAME: ${SERVICE_NAME}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      KAFKA_BROKERS: kafka:9092
      KAFKA_ENABLE_SSL: ${KAFKA_ENABLE_SSL}
      KAFKA_CLIENT_ID: ${KAFKA_CLIENT_ID}
      KAFKA_GROUP_ID: ${KAFKA_GROUP_ID}
    depends_on:
      - redis
    restart: on-failure
  migrate:
    build:
      context: .
      args:
        NPM_LOG_LEVEL: notice
    command: npm run db:init
    working_dir: /app/server
    environment:
      BCRYPT_SALT: ${BCRYPT_SALT}
      DB_URL: "`sqlserver://db:1433;database=${DB_NAME};user=${DB_USER};password=${DB\
        _PASSWORD};TrustServerCertificate=true`"
    depends_on:
      db:
        condition: service_healthy
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - ${DB_PORT}:1433
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      MSSQL_SA_PASSWORD: ${DB_PASSWORD}
      ACCEPT_EULA: Y
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test:
        - CMD
        - /opt/mssql-tools/bin/sqlcmd
        - -S
        - localhost
        - -U
        - ${DB_USER}
        - -P
        - ${DB_PASSWORD}
        - -Q
        - SELECT 1
        - -b
        - -o
        - /dev/null
      timeout: 5s
      interval: 10s
      retries: 10
      start_period: 10s
    restart: unless-stopped
  zookeeper:
    image: confluentinc/cp-zookeeper:5.2.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
  kafka:
    image: confluentinc/cp-kafka:7.3.1
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 9997:9997
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - zookeeper
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_JMXPORT: 9997
  redis:
    container_name: ${REDIS_HOST}
    image: redis:7
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - redis:/data
volumes:
  postgres: ~
  mssql: ~
  redis:
    driver: local
